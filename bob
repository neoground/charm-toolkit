#!/usr/bin/env bash
#
# Bob Command
#
# Create new charm instances,
# Provide easy access to Bob CLI

# Set default PHP executable paths
PHP_PATHS=( "php" "/usr/bin/php" "/usr/local/bin/php" "/opt/plesk/php/8.1/bin/php" )

# Find first available PHP executable path
PHP_PATH=""
for path in "${PHP_PATHS[@]}"; do
    if command -v "$path" >/dev/null 2>&1; then
        PHP_PATH="$path"
        break
    fi
done

# Check if PHP executable was found
if [ -z "$PHP_PATH" ]; then
    echo -e "‚ùå I have a bad feeling about this... PHP not found."
    echo -e "  Ensure PHP is installed and the path is set correctly."
    exit 1
fi

# Check if Composer is installed
if ! command -v composer &> /dev/null
then
    echo -e "‚ùå It's a trap! Composer not found."
    echo -e "  Install Composer and ensure it's available"
    echo -e "  in your PATH to continue your journey."
    exit 1
fi

# Create new project
if [ "$1" == "new" ]; then
    echo '

 ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà
‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà
‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà
‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà
 ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà


Welcome to the Charm PHP Framework!

The Charm PHP Framework is a special PHP framework
that'\''s optimized for APIs and business web apps.
It'\''s faster and slimmer than other PHP frameworks,
making it the perfect choice for developers who
need high-performance software that can handle
complex business logic.

Get started with the Charm PHP Framework today
and see what you can build! Let'\''s go!'

    echo " "
    echo "Creating new project: $2..."
    echo " "

    # Create new project directory
    mkdir "$1"

    # Clone Charm wireframe
    echo -e "Cloning charm-wireframe..."
    git clone --depth 1 --quiet https://github.com/neoground/charm-wireframe.git "$1"

    # Navigate to the new project directory
    cd "$1"

    # Create required directories and set permissions
    echo -e "Creating directory structure..."
    mkdir -p var/cache var/logs data app/Config/Environments
    chmod -R 0777 var/cache var/logs data

    # Install dependencies using Composer
    echo -e "Installing composer packages..."
    composer -n -q update

    # Update main config
    echo -e "Updating config..."
    sed -i 's/^ *name: charm-bbq$/  name: '"$1-bbq"'/' app/Config/main.yaml
    sed -i "s/^ *name: charm$/  name: '$1'/" app/Config/main.yaml
    timezone=$(cat /etc/timezone)
    timezone="${timezone//@/\\@}"
    sed -i "s@timezone:.*@timezone: '$timezone'@g" app/Config/main.yaml
    sed -i "s/language:.*/language: $LANG/" app/Config/main.yaml
    sed -i "s/auth_salt:.*/auth_salt: '$(openssl rand -base64 29 | tr -d "=+/" | cut -c1-25)'/" app/Config/main.yaml

    # Update connections config
    sed -i "s/  database:.*/  database:  '$1'/" app/Config/connections.yaml
    sed -i "s/prefix:.*/prefix:   '$1_'/" app/Config/connections.yaml

    echo -e "Project created."

    # Create local environment
    "$PHP_PATH" bob.php c:env Local

    # TODO Auto-suggest / adjust webserver config
    if [ -d "/etc/apache2" ]; then
      echo " "
      echo -e "üåê Apache2 detected. You might need to adjust your webserver or"
      echo -e "   the .htaccess in your new project."
      echo " "
    fi
    if [ -d "/etc/nginx" ]; then
      echo " "
      echo -e "üåê Nginx detected. You might need to adjust your webserver."
      echo -e "   See the nginx.conf in your new project."
      echo " "
    fi

    echo " "
    echo -e "‚úÖ ${GREEN}The Force is strong with this one!"
    echo -e "   The Charm PHP Framework has been successfully installed.${RESET}"
    echo " "
    echo -e "üíª Your journey begins! Access ${GREEN}https://localhost/path/to/$1${RESET}"
    echo -e "   to view a greeting from a galaxy far, far away."
    echo " "
    echo -e "üì° Alternatively, unleash the power of ${GREEN}bob serve${RESET}"
    echo -e "   to create a local development environment accessible at"
    echo -e "   ${GREEN}https://localhost:8000"${RESET}
    echo " "

    exit 0
fi

# Check if file exists
if [ -f "bob.php" ]; then
    # Call PHP script with arguments
     "$PHP_PATH" "bob.php" "${@:2}"
    exit 0
fi

#!/bin/bash

# Define colors for fancy output
GREEN="\033[32m"
YELLOW="\033[33m"
MAGENTA="\033[35m"
CYAN="\033[36m"
RESET="\033[0m"

# Print the help text with color output
echo -e "${MAGENTA}Welcome to Bob, the Intergalactic Charm Framework Toolkit!${RESET}"
echo ""
echo -e "In a galaxy far, far away, Bob is your trusty droid companion,"
echo -e "here to assist you with your Charm Framework projects."
echo ""
echo -e "${YELLOW}Usage:${RESET}"
echo -e "  ${GREEN}bob command [arguments] [options]${RESET}"
echo ""
echo -e "  When in a Charm project, Bob will execute the CLI command \"command\""
echo -e "  for this project, passing along arguments and options like a loyal astromech."
echo ""
echo -e "${YELLOW}Create a new Charm project:${RESET}"
echo -e "  ${GREEN}bob new <project-name>${RESET}"
echo ""
echo -e "  Command your own Millennium Falcon! Bob will create a new directory named"
echo -e "  \"<project-name>\", containing a fresh Charm project based on the charm-wireframe."
echo ""
echo -e "${YELLOW}Example:${RESET}"
echo -e "  ${GREEN}bob new LightSpeeder${RESET}"
echo ""
echo -e "  This will initialize a new Charm project called \"LightSpeeder\" in a"
echo -e "  directory named \"LightSpeeder\"."
echo ""
echo -e "${CYAN}May the Force be with you on your journey through the vast"
echo -e "universe of web development with Charm Framework and Bob by your side!${RESET}"
echo ""
exit 0
