#!/usr/bin/env bash
#
# Bob Command
#
# Create new charm instances,
# Provide easy access to Bob CLI

# Define colors for fancy output
RED="\033[31m"
GREEN="\033[32m"
YELLOW="\033[33m"
CYAN="\033[36m"
RESET="\033[0m"

function outputRainbow() {
  colors=(
    "\033[31m" # red
    "\033[32m" # green
    "\033[33m" # yellow
    "\033[34m" # blue
    "\033[35m" # magenta
    "\033[36m" # cyan
    "\033[37m" # white
    "\033[90m" # gray
    "\033[91m" # bright-red
    "\033[92m" # bright-green
    "\033[93m" # bright-yellow
    "\033[94m" # bright-blue
    "\033[95m" # bright-magenta
    "\033[96m" # bright-cyan
    "\033[97m" # bright-white
  )

  text=$1
  lines=()
  while IFS= read -r line; do
    lines+=( "$line" )
  done < <(printf '%s\n' "$text")

  last_color=
  for line in "${lines[@]}"; do
    new_color=$(( RANDOM % ${#colors[@]} ))
    while [[ "$new_color" == "$last_color" ]]; do
      new_color=$(( RANDOM % ${#colors[@]} ))
    done
    last_color=$new_color
    echo -e "${colors[$new_color]}$line${RESET}"
  done
}

# Set default PHP executable paths
PHP_PATHS=( "php" "/usr/bin/php" "/usr/local/bin/php" "/opt/plesk/php/8.1/bin/php" )

# Find first available PHP executable path
PHP_PATH=""
for path in "${PHP_PATHS[@]}"; do
    if command -v "$path" >/dev/null 2>&1; then
        PHP_PATH="$path"
        break
    fi
done

# Check if PHP executable was found
if [ -z "$PHP_PATH" ]; then
    echo -e "‚ùå ${RED}I have a bad feeling about this... PHP not found."
    echo -e "  Ensure PHP is installed and the path is set correctly.${RESET}"
    exit 1
fi

# Check if Composer is installed
if ! command -v composer &> /dev/null
then
    echo -e "‚ùå ${RED}It's a trap! Composer not found."
    echo -e "  Install Composer and ensure it's available"
    echo -e "  in your PATH to continue your journey.${RESET}"
    exit 1
fi

# Self-updater
if [ "$1" == "self-update" ]; then
    # Bob CLI: Self-Update
    # ---------------------
    # Initiating hyperdrive sequence...
    # Fetching latest updates from the galaxy far, far away...

    echo -e "${CYAN}Commencing self-update...${RESET}"

    # Fetch the latest version of the Bob script from GitHub
    curl -fSsL -o /tmp/bob https://raw.githubusercontent.com/neoground/charm-toolkit/main/bob

    # Check if the downloaded script is valid and has the necessary permissions
    if [ -s /tmp/bob ] && chmod +x /tmp/bob; then
      # Replace the existing Bob script with the latest version
      echo -e "Moving new version to /usr/local/bin/bob..."
      if [[ $(id -u) -ne 0 && -x $(command -v sudo) ]]; then
          sudo mv /tmp/bob /usr/local/bin/bob
      elif [[ $(id -u) -eq 0 ]]; then
          mv /tmp/bob /usr/local/bin/bob
      else
          echo -e "${RED}Failed moving bob to /usr/local/bin/bob! The Force is not strong with this update...${RESET}"
          echo "Please run with sudo or as root."
          exit 1
      fi
      mv /tmp/bob /usr/local/bin/bob

      echo -e "${GREEN}‚úÖ Update successful! Bob is now ready!${RESET}"
    else
      # In case the download failed or the script is not executable
      echo -e "${RED}Update failed! The Force is not strong with this update...${RESET}"
    fi

    exit 0
fi

# Dev server
if [ "$1" == "serve" ]; then
  outputRainbow " ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà"
  outputRainbow "‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà"
  outputRainbow "‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà"
  outputRainbow "‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà"
  outputRainbow " ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà"
  echo " "
  outputRainbow "Welcome to the Charm PHP Dev Server"
  echo " "
  host="localhost"
  port="8000"

  # Check the number of arguments
  if [ "$#" -eq 1 ]; then
      host="$2"
  elif [ "$#" -eq 2 ]; then
      host="$2"
      port="$3"
  fi

  # Execute the PHP built-in server
  "$PHP_PATH" -S "$host:$port"
  exit 0
fi

# Create new project
if [ "$1" == "new" ]; then
    outputRainbow " ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà"
    outputRainbow "‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà"
    outputRainbow "‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà"
    outputRainbow "‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà"
    outputRainbow " ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà"
    echo " "
    outputRainbow "Welcome to the Charm PHP Framework!"
    echo " "
    echo -e "The Charm PHP Framework is a special PHP framework"
    echo -e "that's optimized for APIs and business web apps."
    echo -e "It's faster and slimmer than other PHP frameworks,"
    echo -e "making it the perfect choice for developers who"
    echo -e "need high-performance software that can handle"
    echo -e "complex business logic."
    echo " "
    echo -e "Get started with the Charm PHP Framework today"
    echo -e "and see what you can build! Let's go!"

    echo " "
    echo " "
    echo -e "${CYAN}Creating new project: $2 ${RESET}"
    echo " "

    # Check if dir exists
    if [ -d "$2" ]; then
        echo -e "${RED}Project directory already existing!${RESET}"
        exit 1
    fi

    # Create new project directory
    mkdir "$2"

    # Clone Charm wireframe
    echo -ne "[..] Cloning charm-wireframe...\r"
    git clone --depth 1 --quiet https://github.com/neoground/charm-wireframe.git "$2"
    echo -ne "${GREEN}[OK]${RESET} Cloned charm-wireframe     \n"

    # Navigate to the new project directory
    cd "$2" || exit 1

    # Create required directories and set permissions
    echo -ne "[..] Creating directory structure...\r"
    mkdir -p var/cache var/logs data app/Config/Environments
    chmod -R 0777 var/cache var/logs data

    # Remove charm-wireframe git stuff
    rm -Rf .git

    echo -ne "${GREEN}[OK]${RESET} Created directory structure     \n"

    # Install dependencies using Composer
    echo -ne "[..] Installing composer packages...\r"
    composer -n -q update
    echo -ne "${GREEN}[OK]${RESET} Installed composer packages     \n"

    # Update main config
    echo -ne "[..] Updating config...\r"
    sed -i 's/^ *name: charm-bbq$/  name: '"$2-bbq"'/' app/Config/main.yaml
    sed -i "s/^ *name: charm$/  name: '$2'/" app/Config/main.yaml
    timezone=$(cat /etc/timezone)
    timezone="${timezone//@/\\@}"
    sed -i "s@timezone:.*@timezone: '$timezone'@g" app/Config/main.yaml
    sed -i "s/language:.*/language: $LANG/" app/Config/main.yaml
    sed -i "s/auth_salt:.*/auth_salt: '$(openssl rand -base64 29 | tr -d "=+/" | cut -c1-25)'/" app/Config/main.yaml

    # Update connections config
    sed -i "s/  database:.*/  database:  '$2'/" app/Config/connections.yaml
    sed -i "s/prefix:.*/prefix:   '$2_'/" app/Config/connections.yaml
    
    echo -ne "${GREEN}[OK]${RESET} Updated config     \n"

    echo " "
    echo -e "${GREEN}[OK]${RESET} Project created!"
    echo " "

    # Create local environment
    "$PHP_PATH" bob.php c:env Local

    if [ -d "/etc/apache2" ]; then
      echo " "
      echo -e "üåê Apache2 detected. You might need to adjust your webserver or"
      echo -e "   the .htaccess in your new project."
      echo " "
    fi
    if [ -d "/etc/nginx" ]; then
      echo " "
      echo -e "üåê Nginx detected. You might need to adjust your webserver."
      echo -e "   See the nginx.conf in your new project."
      echo " "
    fi

    echo " "
    echo -e "‚úÖ ${GREEN}The Force is strong with this one!"
    echo -e "   The Charm PHP Framework has been successfully installed.${RESET}"
    echo " "
    echo -e "üíª Your journey begins! Access ${GREEN}https://localhost/path/to/$2${RESET}"
    echo -e "   to view a greeting from a galaxy far, far away."
    echo " "
    echo -e "üì° Alternatively, unleash the power of ${GREEN}bob serve${RESET}"
    echo -e "   to create a local development environment accessible at"
    echo -e "   ${GREEN}https://localhost:8000${RESET}"
    echo " "

    exit 0
fi

# Check if file exists
if [ -f "bob.php" ]; then
    # Call PHP script with arguments
     "$PHP_PATH" "bob.php" "${@:2}"
    exit 0
fi

# Print the help text with color output
outputRainbow " ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà"
outputRainbow "‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà"
outputRainbow "‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà"
outputRainbow "‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà"
outputRainbow " ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà"
echo " "
echo -e "${CYAN}Welcome to Bob, the Intergalactic Charm Framework Toolkit!${RESET}"
echo ""
echo -e "In a galaxy far, far away, Bob is your trusty droid companion,"
echo -e "here to assist you with your Charm Framework projects."
echo ""
echo -e "${YELLOW}Usage:${RESET}"
echo -e "  ${GREEN}bob command [arguments] [options]${RESET}"
echo ""
echo -e "  When in a Charm project, Bob will execute the CLI command \"command\""
echo -e "  for this project, passing along arguments and options like a loyal astromech."
echo ""
echo -e "${YELLOW}Create a new Charm project:${RESET}"
echo -e "  ${GREEN}bob new <project-name>${RESET}"
echo ""
echo -e "  Command your own Millennium Falcon! Bob will create a new directory named"
echo -e "  \"<project-name>\", containing a fresh Charm project based on the charm-wireframe."
echo ""
echo -e "${YELLOW}Example:${RESET}"
echo -e "  ${GREEN}bob new LightSpeeder${RESET}"
echo ""
echo -e "  This will initialize a new Charm project called \"LightSpeeder\" in a"
echo -e "  directory named \"LightSpeeder\"."
echo ""
echo -e "${CYAN}May the Force be with you on your journey through the vast"
echo -e "universe of web development with Charm Framework and Bob by your side!${RESET}"
echo ""
exit 0
